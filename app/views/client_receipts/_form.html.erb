<%= form_for [@client, @order, @client_receipt], html: { multipart: true, class: 'directUpload', data: {'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host } } do |f| %>
  <% if @client_receipt.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@client_receipt.errors.count, "error") %> prohibited this client_receipt from being saved:</h2>

      <ul>
      <% @client_receipt.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-group">
    <%= f.label 'Numero' %><br>
    <%= f.number_field :number %>
  </div>
  <div class="form-group">
    <%= f.label 'Metros Cubicos' %><br>
    <%= f.text_field :cubic_meters %>
  </div>
  <div class="form-group">
    <%= f.label 'Valor por Metro Cubico' %><br>
    <%= f.text_field :value_per_cubic_meter %>
  </div>
  <div class="form-group">
    <%= f.label 'Fecha Trabajada' %><br>
    <%= f.date_select :date_worked %>
  </div>

  <div class="form-group">
    <%= f.label 'Foto de Recibo' %>
    <%= f.file_field :copy_url %>
  </div>
  <div class="actions">
    <%= f.submit "Crear Recibo", class: 'btn btn-default' %>
  </div>
<% end %>

<script type="text/javascript" charset="utf-8">
  $(function() {
      $('.directUpload').find("input:file").each(function(i, elem) {
        var fileInput    = $(elem);
        var form         = $(fileInput.parents('form:first'));
        var submitButton = form.find('input[type="submit"]');
        var progressBar  = $("<div class='bar'></div>");
        var barContainer = $("<div class='progress'></div>").append(progressBar);
        fileInput.after(barContainer)
        fileInput.fileupload({
          fileInput:       fileInput,
          url:             form.data('url'),
          type:            'POST',
          autoUpload:       true,
          formData:         form.data('form-data'),
          paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
          dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
          replaceFileInput: false,
          progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            progressBar.css('width', progress + '%')
          },
          start: function (e) {
            submitButton.prop('disabled', true);

            progressBar.
              css('background', 'green').
              css('display', 'block').
              css('width', '0%').
              text("Loading...");
          },
          done: function(e, data) {
            submitButton.prop('disabled', false);
            progressBar.text("Uploading done");

            // extract key and generate URL from response
            var key   = $(data.jqXHR.responseXML).find("Key").text();
            var url   = '//' + form.data('host') + '/' + key;

            // create hidden field
            var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: url })
            form.append(input);
          },
          fail: function(e, data) {
            submitButton.prop('disabled', false);

            progressBar.
              css("background", "red").
              text("Failed");
          }
        });
      });
    });
</script>
